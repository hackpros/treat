<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.navigate.treat.dao.multi.UserAccountLogMapper" >
    <resultMap id="BaseResultMap" type="com.navigate.treat.beans.multi.UserAccountLog" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="userId" property="userId" jdbcType="BIGINT" />
        <result column="nickName" property="nickName" jdbcType="VARCHAR" />
        <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
        <result column="toUser" property="toUser" jdbcType="VARCHAR" />
        <result column="amount" property="amount" jdbcType="DECIMAL" />
        <result column="balanceAvailable" property="balanceAvailable" jdbcType="DECIMAL" />
        <result column="type" property="type" jdbcType="TIMESTAMP" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, userId, nickName, ctime, toUser, amount, balanceAvailable, type, remark
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.navigate.treat.beans.multi.UserAccountLogQueryHelper" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from userAccountLog
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select 
        <include refid="Base_Column_List" />
        from userAccountLog
        where id = #{id,jdbcType=BIGINT}
    </select>

    <insert id="insert" parameterType="com.navigate.treat.beans.multi.UserAccountLog" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into userAccountLog (id, userId, nickName, 
            ctime, toUser, amount, 
            balanceAvailable, type, remark
            )
        values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{nickName,jdbcType=VARCHAR}, 
            #{ctime,jdbcType=TIMESTAMP}, #{toUser,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, 
            #{balanceAvailable,jdbcType=DECIMAL}, #{type,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
            )
    </insert>

    <select id="countByExample" parameterType="com.navigate.treat.beans.multi.UserAccountLogQueryHelper" resultType="java.lang.Integer" >
        select count(*) from userAccountLog
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update userAccountLog
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null" >
                userId = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.nickName != null" >
                nickName = #{record.nickName,jdbcType=VARCHAR},
            </if>
            <if test="record.ctime != null" >
                ctime = #{record.ctime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.toUser != null" >
                toUser = #{record.toUser,jdbcType=VARCHAR},
            </if>
            <if test="record.amount != null" >
                amount = #{record.amount,jdbcType=DECIMAL},
            </if>
            <if test="record.balanceAvailable != null" >
                balanceAvailable = #{record.balanceAvailable,jdbcType=DECIMAL},
            </if>
            <if test="record.type != null" >
                type = #{record.type,jdbcType=TIMESTAMP},
            </if>
            <if test="record.remark != null" >
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update userAccountLog
        set id = #{record.id,jdbcType=BIGINT},
            userId = #{record.userId,jdbcType=BIGINT},
            nickName = #{record.nickName,jdbcType=VARCHAR},
            ctime = #{record.ctime,jdbcType=TIMESTAMP},
            toUser = #{record.toUser,jdbcType=VARCHAR},
            amount = #{record.amount,jdbcType=DECIMAL},
            balanceAvailable = #{record.balanceAvailable,jdbcType=DECIMAL},
            type = #{record.type,jdbcType=TIMESTAMP},
            remark = #{record.remark,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.navigate.treat.beans.multi.UserAccountLog" >
        update userAccountLog
        <set >
            <if test="userId != null" >
                userId = #{userId,jdbcType=BIGINT},
            </if>
            <if test="nickName != null" >
                nickName = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="ctime != null" >
                ctime = #{ctime,jdbcType=TIMESTAMP},
            </if>
            <if test="toUser != null" >
                toUser = #{toUser,jdbcType=VARCHAR},
            </if>
            <if test="amount != null" >
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="balanceAvailable != null" >
                balanceAvailable = #{balanceAvailable,jdbcType=DECIMAL},
            </if>
            <if test="type != null" >
                type = #{type,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null" >
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from userAccountLog
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="com.navigate.treat.beans.multi.UserAccountLogQueryHelper" >
        delete from userAccountLog
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

</mapper>