<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.navigate.treat.dao.basic.RecordOrderMapper" >
    <resultMap id="BaseResultMap" type="com.navigate.treat.beans.basic.RecordOrder" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="type" property="type" jdbcType="INTEGER" />
        <result column="userId" property="userId" jdbcType="BIGINT" />
        <result column="orderNum" property="orderNum" jdbcType="VARCHAR" />
        <result column="amount" property="amount" jdbcType="DECIMAL" />
        <result column="mtime" property="mtime" jdbcType="TIMESTAMP" />
        <result column="ctime" property="ctime" jdbcType="TIMESTAMP" />
        <result column="distributeAmount" property="distributeAmount" jdbcType="DECIMAL" />
        <result column="payStatus" property="payStatus" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, type, userId, orderNum, amount, mtime, ctime, distributeAmount, payStatus
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.navigate.treat.beans.basic.RecordOrderQueryHelper" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from record_order
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select 
        <include refid="Base_Column_List" />
        from record_order
        where id = #{id,jdbcType=BIGINT}
    </select>

    <insert id="insert" parameterType="com.navigate.treat.beans.basic.RecordOrder" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into record_order (id, type, userId, 
            orderNum, amount, mtime, 
            ctime, distributeAmount, payStatus
            )
        values (#{id,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, 
            #{orderNum,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{mtime,jdbcType=TIMESTAMP}, 
            #{ctime,jdbcType=TIMESTAMP}, #{distributeAmount,jdbcType=DECIMAL}, #{payStatus,jdbcType=INTEGER}
            )
    </insert>

    <insert id="insertSelective" parameterType="com.navigate.treat.beans.basic.RecordOrder" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into record_order
        <trim prefix="(" suffix=")" suffixOverrides="," >
            id,
            <if test="type != null" >
                type,
            </if>
            <if test="userId != null" >
                userId,
            </if>
            <if test="orderNum != null" >
                orderNum,
            </if>
            <if test="amount != null" >
                amount,
            </if>
            <if test="mtime != null" >
                mtime,
            </if>
            <if test="ctime != null" >
                ctime,
            </if>
            <if test="distributeAmount != null" >
                distributeAmount,
            </if>
            <if test="payStatus != null" >
                payStatus,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            #{id,jdbcType=BIGINT},
            <if test="type != null" >
                #{type,jdbcType=INTEGER},
            </if>
            <if test="userId != null" >
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="orderNum != null" >
                #{orderNum,jdbcType=VARCHAR},
            </if>
            <if test="amount != null" >
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="mtime != null" >
                #{mtime,jdbcType=TIMESTAMP},
            </if>
            <if test="ctime != null" >
                #{ctime,jdbcType=TIMESTAMP},
            </if>
            <if test="distributeAmount != null" >
                #{distributeAmount,jdbcType=DECIMAL},
            </if>
            <if test="payStatus != null" >
                #{payStatus,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.navigate.treat.beans.basic.RecordOrderQueryHelper" resultType="java.lang.Integer" >
        select count(*) from record_order
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update record_order
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.type != null" >
                type = #{record.type,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null" >
                userId = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.orderNum != null" >
                orderNum = #{record.orderNum,jdbcType=VARCHAR},
            </if>
            <if test="record.amount != null" >
                amount = #{record.amount,jdbcType=DECIMAL},
            </if>
            <if test="record.mtime != null" >
                mtime = #{record.mtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.ctime != null" >
                ctime = #{record.ctime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.distributeAmount != null" >
                distributeAmount = #{record.distributeAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.payStatus != null" >
                payStatus = #{record.payStatus,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update record_order
        set id = #{record.id,jdbcType=BIGINT},
            type = #{record.type,jdbcType=INTEGER},
            userId = #{record.userId,jdbcType=BIGINT},
            orderNum = #{record.orderNum,jdbcType=VARCHAR},
            amount = #{record.amount,jdbcType=DECIMAL},
            mtime = #{record.mtime,jdbcType=TIMESTAMP},
            ctime = #{record.ctime,jdbcType=TIMESTAMP},
            distributeAmount = #{record.distributeAmount,jdbcType=DECIMAL},
            payStatus = #{record.payStatus,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.navigate.treat.beans.basic.RecordOrder" >
        update record_order
        <set >
            <if test="type != null" >
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="userId != null" >
                userId = #{userId,jdbcType=BIGINT},
            </if>
            <if test="orderNum != null" >
                orderNum = #{orderNum,jdbcType=VARCHAR},
            </if>
            <if test="amount != null" >
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="mtime != null" >
                mtime = #{mtime,jdbcType=TIMESTAMP},
            </if>
            <if test="ctime != null" >
                ctime = #{ctime,jdbcType=TIMESTAMP},
            </if>
            <if test="distributeAmount != null" >
                distributeAmount = #{distributeAmount,jdbcType=DECIMAL},
            </if>
            <if test="payStatus != null" >
                payStatus = #{payStatus,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from record_order
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="com.navigate.treat.beans.basic.RecordOrderQueryHelper" >
        delete from record_order
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

</mapper>